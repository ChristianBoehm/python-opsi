image: ubuntu:latest

stages:
  # - test
  - package


# run unittests:
#   stage: test
#   before_script:
#     - apt update
#     - apt -y install build-essential python3-dev librsync-dev lsb-release python3-apsw python3-crypto python3-magic python3-mysqldb python3-openssl python3-pampy python3-pip python3-sqlalchemy
#     - pip install .[test,qa]
#   script:
#     - ./run_qa.sh
#   artifacts:
#     name: 'python-opsi_QA'
#     paths:
#       - pylint.txt
#       - pep8.txt
#       - coverage.xml
#     reports:
#       junit: testreport.xml
#     expire_in: 1 day


build documentation:
  stage: package
  before_script:
    - apt update
    - apt -y install build-essential default-libmysqlclient-dev python3-pip
    - pip3 install .
    - pip3 install sphinx
  script:
    - sphinx-apidoc --force --separate -o doc/src OPSI/
    - sphinx-build -b html -d doc/_build/doctrees -D latex_paper_size=a4 -D latex_paper_size=letter doc/src/ doc/python-opsi/
  after_script:
    - mv doc/python-opsi/ .
  artifacts:
    name: 'python-opsi_documentation'
    paths:
      - python-opsi/
    expire_in: 1 day


package for OBS:
  stage: package
  before_script:
    - apt update
    - apt install -y devscripts debhelper dh-python gettext lsb-release python3-all python3-setuptools
  script:
    - ./create_source.sh
    - test -f python3-opsi_*.dsc
    - test -f python3-opsi_*.tar.gz
    - test -f python3-opsi.spec
  artifacts:
    name: 'python-opsi_OBS'
    paths:
      - python3-opsi_*.dsc
      - python3-opsi_*.tar.gz
      - python3-opsi.spec
    expire_in: 2 days
  only:
      - /^release/.*$/i
      - tags
      - web
